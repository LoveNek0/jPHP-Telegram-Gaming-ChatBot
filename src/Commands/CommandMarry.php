<?php


namespace Commands;


use Engine\Database\User;
use Engine\Database\User\Permission;
use Engine\GamingBot;
use Engine\System\RegexPatterns;
use Engine\Templates\AbstractCommand;
use php\time\Time;

class CommandMarry extends AbstractCommand
{
    public $command = "marry";
    public $aliases = [
        "—Å–≤–∞–¥—å–±–∞",
        "–∂–µ–Ω–∏—Ç—å—Å—è",
        "–±—Ä–∞–∫"
    ];
    public $permission = [
        Permission::ALL
    ];
    public $descriptions = [
        "–°–æ–∑–¥–∞—Ç—å –±—Ä–∞–∫ —Å –∫–µ–º-—Ç–æ",
        "–°–¥–µ–ª–∞—Ç—å –∏–ª–∏ –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ" => ["[–ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ]"],
        "–û—Ç–∫–ª–æ–Ω–∏—Ç—å —Å–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ" => ["cancel|–æ—Ç–º–µ–Ω–∞"],
        "–û—Ç–∫–ª–æ–Ω–∏—Ç—å —á—å–µ-—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ" => ["cancel|–æ—Ç–º–µ–Ω–∞", "[–ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ]"],
        "–†–∞–∑–æ—Ä–≤–∞—Ç—å –±—Ä–∞–∫" => ["break|—Ä–∞–∑–æ—Ä–≤–∞—Ç—å"],
        "–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π" => ["list|—Å–ø–∏—Å–æ–∫"]
    ];

    public function onCall(GamingBot $bot, User $user, $update, string $cmd, $args = [])
    {
        if(!is_dir("./database/"))
            mkdir("./database/");
        if(!is_file("./database/marry_invites.json"))
            file_put_contents("./database/marry_invites.json", json_encode([], JSON_PRETTY_PRINT));
        $list = json_decode(file_get_contents("./database/marry_invites.json"), true);

        $message = "üíç –ë—Ä–∞–∫\n";

        $e = false;
        if(isset($update->message->reply_to_message))
            if($update->message->reply_to_message->from->id == $user->getID()) {
                $message .= "    ‚ùå –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ–±—è";
                $e = true;
            }

        if(!$e)
            if(count($args) == 0){
                if(!isset($update->message->reply_to_message))
                    $message .= "    üìî –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–∫–ª—é—á–∞—Ç—å –∏ —Ä–∞–∑—Ä—ã–≤–∞—Ç—å –±—Ä–∞–∫–∏\n    üíÅ‚Äç‚ôÄÔ∏è –í–≤–µ–¥–∏ <code>.help marry</code> –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏";
                else
                    if($update->message->reply_to_message->from->is_bot)
                        $message .= "    ‚ùå –ù–µ–ª—å–∑—è –≤—ã–π—Ç–∏ –∑–∞ –±–æ—Ç–∞!";
                    else{
                        $partner = $update->message->reply_to_message->from->id;
                        if(!User::isExist($partner))
                            $message .= "    ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –∏–≥—Ä–æ–∫–æ–≤!";
                        else{
                            $partner = User::getUser($partner);
                            if($user->spouse()->get() != 0) {
                                $t = User::getUser($user->spouse()->get());
                                $message .= "    ‚ùå –¢—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å <a href=\"tg://user?id={$t->getID()}\">{$t->name()->get()}</a>";
                            }
                            elseif($partner->spouse()->get() != 0){
                                $t = User::getUser($partner->spouse()->get());
                                $message .= "    ‚ùå <a href=\"tg://user?id={$partner->getID()}\">{$partner->name()->get()}</a> —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å <a href=\"tg://user?id={$t->getID()}\">{$t->name()->get()}</a>";
                            }
                            else{
                                $t = null;
                                foreach ($list as $u_id => $data){
                                    if($u_id == "user_" . $user->getID()){
                                        $t = User::getUser($data["id"]);
                                        break;
                                    }
                                }
                                if($t != null){
                                    $message .= "    üíÅ‚Äç‚ôÄÔ∏è –¢—ã —É–∂–µ —Å–¥–µ–ª–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ <a href=\"tg://user?id={$t->getID()}\">{$t->name()->get()}</a>";
                                }
                                else
                                    if(isset($list["user_" . $partner->getID()]))
                                        if($list["user_" . $partner->getID()]["id"] == $user->getID()){
                                            $user->spouse()->set($partner->getID());
                                            $partner->spouse()->set($user->getID());
                                            $tt = [];
                                            foreach ($list as $a => $b)
                                                if($a != "user_" . $user->getID() && $a != "user_" . $partner->getID())
                                                    $tt[$a] = $b;
                                            $list = $tt;
                                            file_put_contents("./database/marry_invites.json", json_encode($list, JSON_PRETTY_PRINT));
                                            $message .= "    ü•∞ <a href=\"tg://user?id={$user->getID()}\">{$user->name()->get()}</a> –∑–∞–∫–ª—é—á–∏–ª –±—Ä–∞–∫ —Å <a href=\"tg://user?id={$partner->getID()}\">{$partner->name()->get()}</a>";
                                        }
                                        else{
                                            $list["user_" . $user->getID()]["id"] = $partner->getID();
                                            $list["user_" . $user->getID()]["time"] = Time::millis();
                                            file_put_contents("./database/marry_invites.json", json_encode($list, JSON_PRETTY_PRINT));
                                            $message .= "    üíÅ‚Äç‚ôÄÔ∏è –¢—ã —Å–¥–µ–ª–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ <a href=\"tg://user?id={$partner->getID()}\">{$partner->name()->get()}</a>";
                                        }
                                    else{
                                        $list["user_" . $user->getID()]["id"] = $partner->getID();
                                        $list["user_" . $user->getID()]["time"] = Time::millis();
                                        file_put_contents("./database/marry_invites.json", json_encode($list, JSON_PRETTY_PRINT));
                                        $message .= "    üíÅ‚Äç‚ôÄÔ∏è –¢—ã —Å–¥–µ–ª–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ <a href=\"tg://user?id={$partner->getID()}\">{$partner->name()->get()}</a>";
                                    }
                            }
                        }
                    }
            }
            else if(count($args) == 1){
                if($args[0] == "break" || $args[0] == "—Ä–∞–∑–æ—Ä–≤–∞—Ç—å"){
                    if(isset($update->message->reply_to_message))
                        $message .= "    ‚ùå –ö–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n    üíÅ‚Äç‚ôÄÔ∏è –í–≤–µ–¥–∏ <code>.help marry</code> –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏";
                    else
                        if($user->spouse()->get() == 0)
                            $message .= "    ‚ùå –¢—ã –Ω–µ –≤ –±—Ä–∞–∫–µ";
                        else{
                            $t = User::getUser($user->spouse()->get());
                            $message .= "    üòî <a href=\"tg://user?id={$user->getID()}\">{$user->name()->get()}</a> —Ä–∞–∑–≤–µ–ª—Å—è —Å <a href=\"tg://user?id={$t->getID()}\">{$t->name()->get()}</a>";
                            $t->spouse()->set(0);
                            $user->spouse()->set(0);
                        }
                }
                elseif($args[0] == "list" || $args[0] == "—Å–ø–∏—Å–æ–∫"){
                    $message .= "    üìù –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∫ <a href=\"tg://user?id={$user->getID()}\">{$user->name()->get()}</a>\n";
                    foreach ($list as $u_id => $data)
                        if($data["id"] == $user->getID()){
                            $from = User::getUser(substr($u_id, 5));
                            $message .= "      üîπ <a href=\"tg://user?id={$from->getID()}\">{$from->name()->get()}</a> - {$data['time']}\n";
                        }
                }
                elseif($args[0] == "–æ—Ç–º–µ–Ω–∞" || $args[0] == "cancel"){
                    if(!isset($update->message->reply_to_message)){
                        $t = null;
                        foreach ($list as $a => $b)
                            if($a == "user_" . $user->getID()){
                                $t = User::getUser($b["id"]);
                                break;
                            }
                        if($t == null)
                            $message .= "    ‚ùå –¢—ã –Ω–∏–∫–æ–º—É –Ω–µ –¥–µ–ª–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ";
                        else{
                            $tt = [];
                            foreach ($list as $a => $b)
                                if($a != "user_" . $user->getID())
                                    $tt[$a] = $b;
                            $list = $tt;
                            file_put_contents("./database/marry_invites.json", json_encode($list, JSON_PRETTY_PRINT));
                            $message .= "    üíÅ‚Äç‚ôÄÔ∏è –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫ <a href=\"tg://user?id={$t->getID()}\">{$t->name()->get()}</a> –æ—Ç–º–µ–Ω–µ–Ω–æ";
                        }
                    }
                    else{
                        if(!User::isExist($update->message->reply_to_message->from->id))
                            $message .= "    ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –∏–≥—Ä–æ–∫–æ–≤!";
                        else{
                            $partner = User::getUser($update->message->reply_to_message->from->id);
                            if(!isset($list["user_" . $partner->getID()]))
                                $message .= "    ‚ùå –ò–≥—Ä–æ–∫ <a href=\"tg://user?id={$partner->getID()}\">{$partner->name()->get()}</a> –Ω–µ –¥–µ–ª–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ <a href=\"tg://user?id={$user->getID()}\">{$user->name()->get()}</a>";
                            else
                                if($list["user_" . $partner->getID()]["id"] != $user->getID())
                                    $message .= "    ‚ùå –ò–≥—Ä–æ–∫ <a href=\"tg://user?id={$partner->getID()}\">{$partner->name()->get()}</a> –Ω–µ –¥–µ–ª–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ <a href=\"tg://user?id={$user->getID()}\">{$user->name()->get()}</a>";
                                else{
                                    $message .= "    ‚ùå –ò–≥—Ä–æ–∫ <a href=\"tg://user?id={$partner->getID()}\">{$partner->name()->get()}</a> –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç <a href=\"tg://user?id={$user->getID()}\">{$user->name()->get()}</a>";
                                    $tt = [];
                                    foreach ($list as $a=>$b)
                                        if($a != "user_" . $partner->getID())
                                            $tt[$a] = $b;
                                    $list = $tt;
                                    file_put_contents("./database/marry_invites.json", json_encode($list, JSON_PRETTY_PRINT));
                                }
                        }
                    }
                }
                else
                    $message .= "    ‚ùå –ö–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n    üíÅ‚Äç‚ôÄÔ∏è –í–≤–µ–¥–∏ <code>.help marry</code> –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏";
            }
            else
                $message .= "    ‚ùå –ö–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n    üíÅ‚Äç‚ôÄÔ∏è –í–≤–µ–¥–∏ <code>.help marry</code> –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏";

        $bot->getAPI()->sendMessage()->chat_id($update->message->chat->id)->parse_mode("HTML")->reply_to_message_id($update->message->message_id)->text($message)->query();
    }
}